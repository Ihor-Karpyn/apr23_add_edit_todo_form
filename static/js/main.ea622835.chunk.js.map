{"version":3,"sources":["App.tsx","index.tsx"],"names":["intervalId","App","useState","Date","birthday","setBirthday","maxDate","setMaxDate","minDate","setMinDate","cellPhone","setCellPhone","step","setStep","undefined","noX","setNoX","noY","setNoY","letters","setLetters","catcherPosition","setCatcherPosition","name","setName","catcherPositionRef","useRef","moveRight","prev","newPosition","current","moveLeft","useEffect","moveRow","prevLetters","newRow","row","i","Math","random","letter","String","fromCharCode","floor","push","generateRow","lastRowToRemove","length","newRows","slice","letterToAdd","prevName","setInterval","window","document","addEventListener","e","key","clearInterval","style","display","gap","type","disabled","getTime","onClick","offset","toLocaleDateString","marginTop","marginLeft","width","min","max","value","onChange","target","cellPhoneArray","split","splice","join","gerFormatedCellPhone","className","map","textAlign","index","location","reload","padding","marginRight","position","top","left","onMouseEnter","randomX","innerWidth","randomY","innerHeight","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ea622835.chunk.js","sourcesContent":["/* eslint-disable */\n\nimport {\n  FC, useEffect, useRef, useState,\n} from 'react';\nimport './App.scss';\n\nlet intervalId: any;\n\nexport const App: FC = () => {\n  const [birthday, setBirthday] = useState<Date>(new Date(0));\n  const [maxDate, setMaxDate] = useState<Date>(new Date());\n  const [minDate, setMinDate] = useState<Date>(new Date(0));\n  const [cellPhone, setCellPhone] = useState<string>('380000000000');\n  const [step, setStep] = useState(1);\n\n  const [noX, setNoX] = useState<number | undefined>(undefined);\n  const [noY, setNoY] = useState<number | undefined>(undefined);\n\n  const [letters, setLetters] = useState<(string[])[]>([['', 'a', '', 'b', ''], ['', '', '', '', ''], ['', '', '', '', ''], ['', '', '', '', ''], ['', '', '', '', '']]);\n  const [catcherPosition, setCatcherPosition] = useState<number>(0);\n  const [name, setName] = useState<string[]>([]);\n  const catcherPositionRef = useRef<number>(-1);\n\n  const moveRight = () => {\n    setCatcherPosition((prev) => {\n      if (prev === 4) {\n        return prev;\n      }\n\n      const newPosition = prev + 1;\n\n      catcherPositionRef.current = newPosition;\n\n      return newPosition;\n    });\n  };\n\n  const moveLeft = () => {\n    setCatcherPosition((prev) => {\n      if (prev === 0) {\n        return prev;\n      }\n\n      const newPosition = prev - 1;\n\n      catcherPositionRef.current = newPosition;\n\n      return newPosition;\n    });\n  };\n\n  const generateRow = () => {\n    const row = [];\n\n    for (let i = 0; i < 5; i++) {\n      const shouldAddLetter = Math.random() > 0.7;\n\n      if (!shouldAddLetter) {\n        row.push('');\n        continue;\n      }\n\n      const letter = String.fromCharCode(Math.floor(Math.random() * 26) + 97);\n\n      row.push(letter);\n    }\n\n    return row;\n  };\n\n  useEffect(() => {\n    setName([]);\n    setLetters([['', 'l', 'o', 'x', ''], ['', '', '', '', ''], ['', '', '', '', ''], ['', '', '', '', ''], ['', '', '', '', '']]);\n  }, [step]);\n\n  const moveRow = () => {\n    setLetters((prevLetters) => {\n      const newRow = generateRow();\n      const lastRowToRemove = prevLetters[prevLetters.length - 1];\n      const newRows = [\n        newRow,\n        ...prevLetters.slice(0, prevLetters.length - 1),\n      ];\n\n      const catcherPositionFromRef = catcherPositionRef.current;\n\n      const letterToAdd = lastRowToRemove[catcherPositionFromRef];\n\n      if (letterToAdd) {\n        setName((prevName) => [...prevName, letterToAdd]);\n      }\n\n      return newRows;\n    });\n  };\n\n  useEffect(() => {\n    intervalId = setInterval(moveRow, 1000);\n\n    window.document.addEventListener('keydown', (e) => {\n      if (e.key === 'ArrowLeft') {\n        moveLeft();\n      }\n\n      if (e.key === 'ArrowRight') {\n        moveRight();\n      }\n    });\n  }, []);\n\n  const gerFormatedCellPhone = () => {\n    const cellPhoneArray = cellPhone.split('');\n\n    cellPhoneArray.splice(0, 3, '(', ...cellPhoneArray.slice(0, 3));\n    cellPhoneArray.splice(4, 0, ')');\n    cellPhoneArray.splice(5, 0, ' ');\n    cellPhoneArray.splice(8, 0, '-');\n    cellPhoneArray.splice(12, 0, '-');\n\n    return cellPhoneArray.join('');\n  };\n\n  const onEarlierClick = () => {\n    setMaxDate(birthday);\n\n    const offset = (birthday.getTime() - minDate.getTime()) / 2;\n\n    setBirthday(new Date(birthday.getTime() - offset));\n  };\n\n  const onLaterClick = () => {\n    setMinDate(birthday);\n\n    const offset = (maxDate.getTime() - birthday.getTime()) / 2;\n\n    setBirthday(new Date(birthday.getTime() + offset));\n  };\n\n  useEffect(() => {\n    if (name.length === 5) {\n      clearInterval(intervalId);\n    }\n  }, [name]);\n\n  return (\n    <div>\n      {step === 1 && (\n        <>\n          <h1>Your birthday?</h1>\n          <div style={{ display: 'flex', gap: '16px' }}>\n            <button\n              type=\"button\"\n              disabled={birthday.getTime() === minDate.getTime()}\n              onClick={onEarlierClick}\n            >\n              Earlier\n            </button>\n            <h3>{birthday.toLocaleDateString()}</h3>\n            <button\n              type=\"button\"\n              disabled={birthday.getTime() === maxDate.getTime()}\n              onClick={onLaterClick}\n            >\n              Later\n            </button>\n          </div>\n          <button\n            style={{\n              marginTop: '16px',\n              marginLeft: '100px',\n            }}\n            type=\"button\"\n            onClick={() => setStep(2)}\n          >\n            Yes!!!\n          </button>\n        </>\n      )}\n\n      {step === 2 && (\n        <>\n          <h1>Your cell phone</h1>\n          <input\n            style={{\n              width: '100vw',\n            }}\n            type=\"range\"\n            min=\"380000000000\"\n            max=\"389999999999\"\n            value={cellPhone}\n            onChange={(e) => setCellPhone(e.target.value)}\n          />\n          <p>{gerFormatedCellPhone()}</p>\n\n          <button\n            style={{\n              marginTop: '16px',\n              marginLeft: '100px',\n            }}\n            type=\"button\"\n            onClick={() => setStep(3)}\n          >\n            Yes!!!\n          </button>\n        </>\n      )}\n\n      {step === 3 && (\n        <div className=\"field\">\n          <h1>What is your name?</h1>\n          <div className=\"moveArea\">\n            {letters.map((row) => {\n\n              return row.map((letter) => {\n\n                return (\n                  <div className=\"letter\">\n                    {letter}\n                  </div>\n                );\n              });\n            })}\n          </div>\n          <div className=\"catcherWrapper\">\n            <div className={catcherPosition === 0 ? 'catcher catcher-active' : 'catcher'} />\n            <div className={catcherPosition === 1 ? 'catcher catcher-active' : 'catcher'} />\n            <div className={catcherPosition === 2 ? 'catcher catcher-active' : 'catcher'} />\n            <div className={catcherPosition === 3 ? 'catcher catcher-active' : 'catcher'} />\n            <div className={catcherPosition === 4 ? 'catcher catcher-active' : 'catcher'} />\n          </div>\n          <div className=\"control\">\n            <button onClick={moveLeft} className=\"moveButton\">{'<==='}</button>\n            <button onClick={moveRight} className=\"moveButton\">{'===>'}</button>\n          </div>\n          <p style={{ textAlign: 'center' }}>or use arrow btn</p>\n          <div className=\"nameWrapper\">\n            {name.map((letter, index) => (\n              <div key={`${letter}-${index}`} className=\"letter\">\n                {letter}\n              </div>\n            ))}\n          </div>\n          {name.length === 5 && (\n            <button\n              style={{\n                marginTop: '16px',\n                marginLeft: '100px',\n              }}\n              type=\"button\"\n              onClick={() => setStep(4)}\n            >\n              Yes!!!\n            </button>\n          )}\n        </div>\n      )}\n\n      {step === 4 && (\n        <>\n          <h1>You so strong!!! Do you want to try again?</h1>\n          <button\n            onClick={() => {\n              window.location.reload();\n            }}\n            type=\"button\"\n            style={{\n              padding: '20px',\n              marginRight: '20px',\n            }}\n          >\n            Yes\n          </button>\n          <button\n            style={{\n              position: 'fixed',\n              top: noY,\n              left: noX,\n              padding: '16px',\n            }}\n            onMouseEnter={() => {\n              const randomX = Math.floor(Math.random() * window.innerWidth);\n              const randomY = Math.floor(Math.random() * window.innerHeight);\n\n              setNoX(randomX);\n              setNoY(randomY);\n            }}\n            onClick={() => {\n              const randomX = Math.floor(Math.random() * window.innerWidth);\n              const randomY = Math.floor(Math.random() * window.innerHeight);\n\n              setNoX(randomX);\n              setNoY(randomY);\n            }}\n            className=\"noBtn\"\n          >\n            No\n          </button>\n        </>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}